[{"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/index.tsx":"1","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/reportWebVitals.ts":"2","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/store.ts":"3","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/App.tsx":"4","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/AuthSlice.ts":"5","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/CategorySlice.ts":"6","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/EventSlice.ts":"7","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/PhotoSlice.ts":"8","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/ParticipationSlice.ts":"9","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/utils/Constants.ts":"10","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/Routes.tsx":"11","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Home.tsx":"12","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Profile.tsx":"13","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Password.tsx":"14","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Category.tsx":"15","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Landing.tsx":"16","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/hoc/Wrapper.tsx":"17","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Event.tsx":"18","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/MyEvent.tsx":"19","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/MyPhotos.tsx":"20","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Auth.tsx":"21","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/common/Header/Header.tsx":"22","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/utils/GqlQueries.ts":"23","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/actions/AuthActions.ts":"24","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/main.tsx":"25","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Auth.css.tsx":"26","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/profile/MyAllPhotos.tsx":"27","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/profile/MyAllEvents.tsx":"28","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/Category/Events.tsx":"29","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/Category/EventCategory.tsx":"30","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/ChangePassword.tsx":"31","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Events/Events.tsx":"32","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/UserCard/UserCard.tsx":"33","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/Posts.tsx":"34","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/TopViewedPeople/Peoples.tsx":"35","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/EventsCategories/Categories.tsx":"36","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/UserRegister.tsx":"37","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/Login.tsx":"38","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/EditProfile.tsx":"39","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/profile/profileSettings.tsx":"40","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostView.tsx":"41","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/Post/Post.tsx":"42","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/AuthCommon.tsx":"43","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostSidebar/Sidebar.tsx":"44","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostImage/PostImage.tsx":"45","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostSidebar/PostViewFooter.tsx":"46","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostSidebar/PostViewContent.tsx":"47","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostSidebar/PostViewHeader.tsx":"48","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/HomeEventTop/HomeEventTop.tsx":"49","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/HomeEventTop/ParticipateModel/ParticipateModel.tsx":"50","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/common/Loader/Loader.tsx":"51"},{"size":650,"mtime":1610220600642,"results":"52","hashOfConfig":"53"},{"size":425,"mtime":1609330291699,"results":"54","hashOfConfig":"53"},{"size":570,"mtime":1610221177929,"results":"55","hashOfConfig":"53"},{"size":1001,"mtime":1610220600598,"results":"56","hashOfConfig":"53"},{"size":1006,"mtime":1610221177929,"results":"57","hashOfConfig":"53"},{"size":417,"mtime":1610221177929,"results":"58","hashOfConfig":"53"},{"size":394,"mtime":1610221177929,"results":"59","hashOfConfig":"53"},{"size":396,"mtime":1610221177929,"results":"60","hashOfConfig":"53"},{"size":652,"mtime":1610221177929,"results":"61","hashOfConfig":"53"},{"size":34,"mtime":1610220600642,"results":"62","hashOfConfig":"53"},{"size":3122,"mtime":1610254590511,"results":"63","hashOfConfig":"53"},{"size":7681,"mtime":1610270923439,"results":"64","hashOfConfig":"53"},{"size":2747,"mtime":1610221177929,"results":"65","hashOfConfig":"53"},{"size":1685,"mtime":1610221177929,"results":"66","hashOfConfig":"53"},{"size":1170,"mtime":1610221177929,"results":"67","hashOfConfig":"53"},{"size":115,"mtime":1610220600642,"results":"68","hashOfConfig":"53"},{"size":1928,"mtime":1610261215978,"results":"69","hashOfConfig":"53"},{"size":3407,"mtime":1610221177929,"results":"70","hashOfConfig":"53"},{"size":1155,"mtime":1610221177929,"results":"71","hashOfConfig":"53"},{"size":1079,"mtime":1610221177929,"results":"72","hashOfConfig":"53"},{"size":2402,"mtime":1610221289616,"results":"73","hashOfConfig":"53"},{"size":2303,"mtime":1610221177929,"results":"74","hashOfConfig":"53"},{"size":7981,"mtime":1610284213995,"results":"75","hashOfConfig":"53"},{"size":393,"mtime":1610221177929,"results":"76","hashOfConfig":"53"},{"size":508,"mtime":1610220600642,"results":"77","hashOfConfig":"53"},{"size":508,"mtime":1610220600638,"results":"78","hashOfConfig":"53"},{"size":2028,"mtime":1610221177929,"results":"79","hashOfConfig":"53"},{"size":1612,"mtime":1610221177929,"results":"80","hashOfConfig":"53"},{"size":14793,"mtime":1610221177929,"results":"81","hashOfConfig":"53"},{"size":2345,"mtime":1610221177929,"results":"82","hashOfConfig":"53"},{"size":5378,"mtime":1610221177929,"results":"83","hashOfConfig":"53"},{"size":3160,"mtime":1610261240413,"results":"84","hashOfConfig":"53"},{"size":2571,"mtime":1610270876078,"results":"85","hashOfConfig":"53"},{"size":3448,"mtime":1610285585032,"results":"86","hashOfConfig":"53"},{"size":1056,"mtime":1610220600638,"results":"87","hashOfConfig":"53"},{"size":926,"mtime":1610221147401,"results":"88","hashOfConfig":"53"},{"size":4529,"mtime":1610221147401,"results":"89","hashOfConfig":"53"},{"size":3602,"mtime":1610221147401,"results":"90","hashOfConfig":"53"},{"size":11693,"mtime":1610221177929,"results":"91","hashOfConfig":"53"},{"size":4446,"mtime":1610221177929,"results":"92","hashOfConfig":"53"},{"size":1418,"mtime":1610221147401,"results":"93","hashOfConfig":"53"},{"size":4461,"mtime":1610272042858,"results":"94","hashOfConfig":"53"},{"size":3093,"mtime":1610221147401,"results":"95","hashOfConfig":"53"},{"size":2651,"mtime":1610221147401,"results":"96","hashOfConfig":"53"},{"size":403,"mtime":1610221147401,"results":"97","hashOfConfig":"53"},{"size":2488,"mtime":1610221147401,"results":"98","hashOfConfig":"53"},{"size":1349,"mtime":1610261175382,"results":"99","hashOfConfig":"53"},{"size":1775,"mtime":1610221147401,"results":"100","hashOfConfig":"53"},{"size":1326,"mtime":1610259259686,"results":"101","hashOfConfig":"53"},{"size":6028,"mtime":1610283933741,"results":"102","hashOfConfig":"53"},{"size":461,"mtime":1610258782471,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"o2a4av",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/index.tsx",[],["225","226"],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/reportWebVitals.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/store.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/App.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/AuthSlice.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/CategorySlice.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/EventSlice.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/PhotoSlice.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/slices/ParticipationSlice.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/utils/Constants.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/Routes.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Home.tsx",["227"],"import React, { useState } from \"react\";\nimport \"./main\";\n\n// import userImage from \"../assets/images/resources/s1.png\";\nimport UserCard from \"../components/home/UserCard/UserCard\";\nimport Posts from \"../components/home/Posts/Posts\";\nimport HomeEventTop from \"../components/home/HomeEventTop/HomeEventTop\";\nimport TrandingEvents from \"../components/home/Events/Events\";\nimport Peoples from \"../components/home/TopViewedPeople/Peoples\";\nimport Categories from \"../components/home/EventsCategories/Categories\";\nimport { useSelector } from \"react-redux\";\nimport { store } from \"../store/storeTypes\";\n\nconst Home = () => {\n    const user = useSelector((state: store) => state.auth.user);\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <main>\n                    <div className=\"main-section\">\n                        <div className=\"container\">\n                            <div className=\"main-section-data\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-3 col-md-4 pd-left-none no-pd\">\n                                        <div\n                                            className=\"main-left-sidebar no-margin\"\n                                            style={{\n                                                position: \"sticky\",\n                                                top: 0,\n                                            }}\n                                        >\n                                            {/* User Profile */}\n                                            <UserCard user={user} />\n\n                                            {/* Categories */}\n                                            <Categories />\n\n                                            {/* Links */}\n                                            {/* <div className=\"tags-sec full-width\">\n                                                <ul>\n                                                    <li>\n                                                        <a href=\"#\">\n                                                            Help Center\n                                                        </a>\n                                                    </li>\n                                                    <li>\n                                                        <a href=\"#\">About</a>\n                                                    </li>\n                                                    <li>\n                                                        <a href=\"#\">\n                                                            Privacy Policy\n                                                        </a>\n                                                    </li>\n                                                    <li>\n                                                        <a href=\"#\">\n                                                            Community Guidelines\n                                                        </a>\n                                                    </li>\n                                                    <li>\n                                                        <a href=\"#\">\n                                                            Cookies Policy\n                                                        </a>\n                                                    </li>\n                                                    <li>\n                                                        <a href=\"#\">Career</a>\n                                                    </li>\n                                                    <li>\n                                                        <a href=\"#\">Language</a>\n                                                    </li>\n                                                    <li>\n                                                        <a href=\"#\">\n                                                            Copyright Policy\n                                                        </a>\n                                                    </li>\n                                                </ul>\n                                                <div className=\"cp-sec\">\n                                                    <img\n                                                        src=\"images/logo2.png\"\n                                                        alt=\"\"\n                                                    />\n                                                    <p>\n                                                        <img\n                                                            src=\"images/cp.png\"\n                                                            alt=\"\"\n                                                        />\n                                                        Copyright 2019\n                                                    </p>\n                                                </div>\n                                            </div>\n                                         */}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-lg-6 col-md-8 no-pd\">\n                                        <div className=\"main-ws-sec\">\n                                            <HomeEventTop />\n                                            <Posts />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-lg-3 pd-right-none no-pd\">\n                                        <div\n                                            className=\"right-sidebar\"\n                                            style={{\n                                                position: \"sticky\",\n                                                top: 0,\n                                            }}\n                                        >\n                                            <div className=\"widget widget-about\">\n                                                <img\n                                                    src=\"images/wd-logo.png\"\n                                                    alt=\"\"\n                                                />\n                                                <h3>Track Time on Workwise</h3>\n                                                <span>\n                                                    Pay only for the Hours\n                                                    worked\n                                                </span>\n                                                <div className=\"sign_link\">\n                                                    <h3>\n                                                        <a href=\"sign-in.html\">\n                                                            Sign up\n                                                        </a>\n                                                    </h3>\n                                                    {/* <a href=\"#\">Learn More</a> */}\n                                                </div>\n                                            </div>\n\n                                            <TrandingEvents />\n                                            <Peoples />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        </>\n    );\n};\n\nexport default Home;\n","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Profile.tsx",["228"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useDispatch,useSelector } from 'react-redux'\n\nimport { store } from '../store/storeTypes';\nimport AuthSlice from '../store/slices/AuthSlice';\nimport { editProfile } from '../utils/GqlQueries';\nimport EditProfile from '../components/auth/EditProfile';\nimport Toast from 'react-bootstrap/Toast'\nimport Alert from 'react-bootstrap/Alert'\nimport './Auth.css';\n\nconst Profile = (props: any) => {\n    const dispatch = useDispatch();\n    const [profile] = useMutation(editProfile);\n    const authActions = AuthSlice.actions;\n    const [profileError, setProfileError] = useState(\"\");\n    const userData = useSelector((state:store)=>state.auth.user);\n    const [show, setShow] = useState(false);\n    \n    const userEditProfile = async (name:string,email : string, password : string,username:string,contactNo:string,image:any|string) => {\n        // setProfileError(\"\");\n        try {\n            let response : any = \"\";\n            if(typeof image === 'string')\n            {\n                if(image.includes(\"http\"))\n                {\n                    response = await profile({variables:{name:name,email: email,password:password,username:username,contactNo:contactNo}});\n                }\n            }    \n            else\n            {\n                response = await profile({variables:{name:name,email: email,password:password,username:username,contactNo:contactNo,image:image}});\n            }\n            setProfileError(\"\");\n            \n            // dispatch(\n            //     authActions.profileError({\n            //     error: \"\"\n            // }))\n            dispatch(\n                authActions.profile({\n                user: response.data.editProfile,\n                error: \"\"\n            }) )\n            setProfileError(\"\");\n    \n            if(profileError === \"\" && response.data)\n            {\n                setShow(true)\n            }\n        } catch (error) {\n            console.log(error.message);\n            setProfileError(error.message);\n        }\n    }\n    const error = useSelector((state:store)=>state.auth.error);\n    let data : any = \"\"\n    console.log(profileError.length);\n    if(profileError.length > 0)\n    {\n        data = <EditProfile userEdit = {userEditProfile} errormsg={profileError}/>\n    }\n    else{\n        data = <EditProfile userProfile={userData} userEdit = {userEditProfile} errormsg={profileError}/>\n    }\n    const noti = <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\n        <Alert key={\"Profile Updated\"} variant={\"success\"}>\n            Profile Updated Successfuly\n        </Alert>\n    </Toast> \n    \n    return <> {noti} { data }</>;\n}\n\nexport default Profile;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Password.tsx",["229"],"import React,{useState} from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useDispatch , useSelector } from 'react-redux'\nimport ChangePassword from '../components/auth/ChangePassword';\nimport { Change_Password } from '../utils/GqlQueries'\nimport AuthSlice from '../store/slices/AuthSlice';\nimport Toast from 'react-bootstrap/Toast'\nimport Alert from 'react-bootstrap/Alert'\nconst Password = (props:any) => {\n    const [newPassword] = useMutation(Change_Password);\n    const [errors,setError] = useState(\"\");\n    const dispatch = useDispatch();\n    const [show, setShow] = useState(false);\n    const authActions = AuthSlice.actions;\n    const changePassword = async (oldPassword:string,password:any) => {\n        try {\n            setError(\"\");\n            const response = await newPassword({variables:{oldPassword: oldPassword,password:password}});\n            dispatch(\n                authActions.changePassword({\n                    user:response.data.changePassword\n            }))\n            if(errors === \"\" && response.data)\n            {\n                setShow(true)\n            }\n        } catch (error) {\n          setError(error.message);\n        }\n    }\n    const noti = <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\n        <Alert key={\"change password\"} variant={\"success\"}>\n            Change Password Successfuly\n        </Alert>\n    </Toast>\n    const render = <ChangePassword changePassword={changePassword} err = { errors } errs= { errors }/>;\n    // if(props.type == \"event\") {\n    //     // render = <MyEvent />        \n    // } \n    return (<>\n        {noti}\n        {render}\n    </>)\n} \n\n\nexport default Password;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Category.tsx",["230","231"],"import React,{useState,useEffect} from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { useDispatch,useSelector } from 'react-redux'\nimport { store } from '../store/storeTypes';\nimport CategorySlice from '../store/slices/CategorySlice';\n\nimport { FetchCategory } from '../utils/GqlQueries';\nimport EventCategory from '../components/Category/EventCategory';\n\nconst Category = (props:any) => {\n    const dispatch = useDispatch();\n    const { data, refetch,loading } = useQuery(FetchCategory);\n    const catActions = CategorySlice.actions;\n    const catData = useSelector((state:store)=>state.category.catList);\n    const [categoryError, setcategoryError] = useState(\"\");\n    useEffect(()=> {\n        try {\n            refetch()\n            dispatch(\n                catActions.category({\n                  category:data.eventCategories  \n                })\n            )        \n        } catch (error) {\n            setcategoryError(error.message)\n        }\n    },[data])\n    let loader : any = \"\";\n    if(!loading && catData)\n    {\n        loader = <EventCategory category = {catData}/>;\n    }\n    return <> \n    {loader}\n    </>\n}\n\nexport default Category;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Landing.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/hoc/Wrapper.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Event.tsx",["232","233","234"],"import React,{useState,useEffect} from 'react';\n\nimport { useQuery,useMutation } from '@apollo/client';\nimport { useDispatch,useSelector } from 'react-redux'\nimport { store } from '../store/storeTypes';\nimport CategorySlice from '../store/slices/CategorySlice';\nimport EventSlice from '../store/slices/EventSlice';\nimport ParticipationSlice from '../store/slices/ParticipationSlice';\nimport { FetchCategory,FetchEvent,user_participate,My_Participent_Event_Check } from '../utils/GqlQueries';\nimport Card from 'react-bootstrap/Card'\nimport Events from '../components/Category/Events';\nconst Event = (props:any) => {\n    const dispatch = useDispatch();\n    const { data, refetch,loading } = useQuery(FetchCategory);\n    const catActions = CategorySlice.actions;\n    const eventActions = EventSlice.actions;\n    const participationActions = ParticipationSlice.actions;\n    const catData = useSelector((state:store)=>state.category.catList);\n    const eventData = useSelector((state:store)=>state.event.eventList);\n    const [categoryError, setcategoryError] = useState(\"\");\n    const [participantError, setparticipantError] = useState(\"\");\n    const [eventStatus, setEventstatus] = useState(\"All\");\n    const [myParticipant] = useMutation(user_participate);\n\n    const [eventspart] = useMutation(My_Participent_Event_Check);\n    \n    const status = async (status:string) => {\n        setEventstatus(status)\n    }\n    const { data:events } = useQuery(FetchEvent,{\n        variables:{\n            categoryId:props.match.params.id,\n            status:eventStatus\n        }\n    });\n    useEffect(()=> {\n        try {\n            dispatch(\n                catActions.category({\n                  category:data.eventCategories  \n                })\n            )        \n        } catch (error) {\n            setcategoryError(error.message)\n        }\n        try {\n            dispatch(\n                eventActions.event({\n                    Event:events.events\n                })\n            )        \n        } catch (error) {\n            setcategoryError(error.message)\n        }\n    },[data,events])\n    \n    const amt = async (eventId:string) => {\n        try{\n            const response = await myParticipant({variables:{eventId: eventId}});\n            dispatch(\n                participationActions.participant({\n                    Participation:response.data\n                })\n            )\n        }catch(error){\n            // setparticipantError(error.message);\n            // console.log(error.message)\n        }\n    }\n    const check = async (eventId:string) => {\n        try{\n            console.log(eventId)\n            const response=await eventspart({variables:{eventId: eventId}});\n            if(response.data.participateCheck == null)\n                setparticipantError(response.data.participateCheck);\n            // console.log(response.data.participateCheck);\n        }catch(error){\n            // console.log(error)\n            setparticipantError(error.message);\n        }\n    }\n    let loader : any = \"\";\n    if(!loading && catData && eventData)\n    {\n        loader = <Events category = {catData} event = {eventData} status={status} amt={amt} check = {check} errpart = {participantError}/>;\n    }\n    return <>\n        <Card>\n            <Card.Body style={{backgroundColor:\"#f2f2f2\"}}>\n                {loader}\n            </Card.Body>\n        </Card>\n    </>\n}\n\nexport default Event;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/MyEvent.tsx",["235","236"],"import React,{useState,useEffect} from 'react';\nimport MyAllEvent from '../components/profile/MyAllEvents';\n\nimport { useQuery } from '@apollo/client';\nimport { useDispatch,useSelector } from 'react-redux'\nimport { store } from '../store/storeTypes';\nimport ParticipationSlice from '../store/slices/ParticipationSlice';\nimport { My_Participent_Event } from '../utils/GqlQueries';\n\nconst MyEvent = (props:any) => {\n    const dispatch = useDispatch();\n    const { data, refetch,loading } = useQuery(My_Participent_Event);\n    const participantActions = ParticipationSlice.actions;\n    const participantData = useSelector((state:store)=>state.participation.myParticipationList);\n    useEffect(()=> {\n        try {\n            refetch()\n            dispatch(\n                participantActions.myParticipant({\n                    Participation:data.myParticipations\n                })\n            )        \n        } catch (error) {\n\n        }\n    },[data])\n    let loader : any = \"\";\n    if(!loading && participantData)\n    {\n        loader = <MyAllEvent participant = {participantData}/>;\n    }\n    return <> \n    {loader}\n    </>\n}\n\nexport default MyEvent;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/MyPhotos.tsx",["237","238"],"import React,{useState,useEffect} from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { useDispatch,useSelector } from 'react-redux'\nimport { store } from '../store/storeTypes';\nimport PhotoSlice from '../store/slices/PhotoSlice';\nimport { Fetch_My_Photos } from '../utils/GqlQueries';\nimport MyAllPhotos from '../components/profile/MyAllPhotos';\n\nconst MyPhotos = (props:any) => {\n    const dispatch = useDispatch();\n    const { data, refetch,loading } = useQuery(Fetch_My_Photos);\n    const photoActions = PhotoSlice.actions;\n    const photoData = useSelector((state:store)=>state.photo.photoList);\n    useEffect(()=> {\n        try {\n            refetch()\n            dispatch(\n                photoActions.photo({\n                    Photo:data.myPhotos\n                })\n            )        \n        } catch (error) {\n\n        }\n    },[data])\n    let loader : any = \"\";\n    if(!loading && photoData)\n    {\n        console.log(photoData);\n        loader = <MyAllPhotos photo = {photoData}/>;\n    }\n    return <> \n    {loader}\n    </>\n}\n\nexport default MyPhotos;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Auth.tsx",["239"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useDispatch } from \"react-redux\";\nimport \"./Auth.css\";\nimport { Login_User, Register_User } from \"../utils/GqlQueries\";\nimport Login from \"../components/auth/Login\";\nimport Register from \"../components/auth/UserRegister\";\nimport {\n    setToken,\n    removeToken,\n    checkAutoAuth,\n} from \"../store/actions/AuthActions\";\nimport AuthSlice from \"../store/slices/AuthSlice\";\n\nconst Auth = (props: any) => {\n    const [login] = useMutation(Login_User);\n    const [register] = useMutation(Register_User);\n    const [err, setErr] = useState(false);\n\n    const dispatch = useDispatch();\n    const authActions = AuthSlice.actions;\n\n    const userAdmin = async (email: string, password: string) => {\n        try {\n            const response = await login({\n                variables: { email: email, password: password },\n            });\n            dispatch(\n                authActions.login({\n                    token: response.data.login.token,\n                    user: response.data.login.user,\n                })\n            );\n            setToken(response.data.login.token);\n            props.history.push(\"/u/home\");\n        } catch (error) {\n            setErr(true);\n        }\n    };\n\n    const userRegisters = async (\n        name: string,\n        email: string,\n        password: string,\n        username: string\n    ) => {\n        try {\n            await register({\n                variables: {\n                    name: name,\n                    email: email,\n                    password: password,\n                    username: username,\n                },\n            });\n            props.history.push(\"/login\");\n        } catch (error) {\n            console.log(error.message);\n        }\n    };\n\n    if (props.type == \"logout\") {\n        try {\n            let token = checkAutoAuth();\n\n            dispatch(\n                authActions.logout({\n                    token: \"\",\n                })\n            );\n            removeToken(token);\n            props.history.push(\"/login\");\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    let render = <Login userAdmin={userAdmin} errormsg={err} />;\n    if (props.type === \"register\") {\n        render = <Register userRegisters={userRegisters} errormsg={\"\"} />;\n    }\n    return render;\n};\n\nexport default Auth;\n","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/common/Header/Header.tsx",["240","241"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { faHome, faCalendarAlt, faUserCircle, faUserCog,faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classes from './Header.module.css'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nconst Header = (props: any) => {\n\tconst drop =  <DropdownButton menuAlign=\"right\" title=\"Dropdown right\" id=\"dropdown-menu-align-right\">\n\t<Dropdown.Item eventKey=\"/u/profile\">My Profile</Dropdown.Item>\n\t<Dropdown.Item eventKey=\"/u/changepassword\">Change Password</Dropdown.Item>\n\t<Dropdown.Divider />\n\t<Dropdown.Item eventKey=\"/u/logout\">Logout</Dropdown.Item>\n</DropdownButton> \n\treturn <>\n\t\t<header>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"header-data\">\n\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faUserCircle} className={classes.faHeaderIcon} size=\"2x\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <div className=\"search-bar\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"search\" placeholder=\"Search...\" />\n\t\t\t\t\t\t\t<button type=\"submit\"><i className=\"la la-search\" /></button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div> */}\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to={\"/u/home\"}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHome} className={classes.faHeaderIcon} size=\"2x\" />\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to={\"/u/category\"}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCalendarAlt} className={classes.faHeaderIcon} size=\"2x\" />\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to={\"/u/profile\"}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserCircle} className={classes.faHeaderIcon} size=\"2x\" />\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t\t {/* <div className=\"user-account\">\n\t\t\t\t\t\t<div className=\"user-info\">\n\t\t\t\t\t\t\t<Link to={\"/u/profile\"}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserCog } className={classes.faHeaderIcon} size=\"2x\"/>\n\t\t\t\t\t\t\t</Link>\t\t \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>  */}\n\n\t\t\t\t\t<div className=\"user-account\">\n\t\t\t\t\t\t<div className=\"user-info\">\n\t\t\t\t\t\t\t<Link to={\"/u/changepassword\"}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCog} className={classes.faHeaderIcon} size=\"2x\"/>\n\t\t\t\t\t\t\t{/* {drop} */}\n\t\t\t\t\t\t\t</Link>\t\t \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t</>;\n}\n\nexport default Header;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/utils/GqlQueries.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/store/actions/AuthActions.ts",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/main.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/containers/Auth.css.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/profile/MyAllPhotos.tsx",["242"],"import React from 'react';\nimport ProfileProps from '../profile/profileSettings';\nimport moment from 'moment';\nimport { FcLike } from 'react-icons/fc'\nimport { MdDateRange } from 'react-icons/md'\n\nconst MyAllPhotos = (props: any) => {\n\n    const photos = (photo: any) => {\n        let myArr: any = [];\n        console.log(photo[0])\n        if (photo[0].length==0) {\n            myArr.push(<div className=\"acc-setting\"><div className=\"notifications-list\">\n            <div className=\"notfication-details\">\n                Empty Photo\n            </div></div>\n        </div>)\n        }\n        else {\n\n            // if()\n            for (let i = 0; i < photo[0].length; i++) {\n                myArr.push(<div className=\"col-lg-4 col-md-4 col-sm-6\" key={i}>\n                    <div className=\"company_profile_info\">\n                        <div className=\"company-up-info\" style={{ padding: \"0px\" }}>\n                            <img src={photo[0][i].imageUrl} alt=\"\" style={{ float: \"none\", marginBottom: \"6px\", height: \"100%\", objectFit: \"initial\", borderRadius: \"0px\", width: \"100%\" }} />\n                            <h3>{photo[0][i].participant.event.title}</h3>\n                            <h4><span style={{ float: \"left\" }}><MdDateRange />{\"  \" + moment(+photo[0][i].participant.event.startDate).format(\"D/MM/yyyy\")}</span><span style={{ float: \"right\" }}><FcLike />{photo[0][i].likes}</span></h4>\n                        </div>\n                    </div>\n                </div>)\n            }\n        }\n        return myArr;\n    }\n    return <>\n        <ProfileProps type=\"myphotos\">\n            <div className=\"acc-setting\">\n                <div className=\"acc-setting\">\n                    <h3>My Photo</h3>\n                    <div className=\"companies-list\">\n                        <div className=\"row\">\n                            {photos(props.photo)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ProfileProps>\n    </>\n}\n\nexport default MyAllPhotos;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/profile/MyAllEvents.tsx",["243","244","245","246"],"import React, { useState, useEffect } from 'react';\nimport ProfileProps from '../profile/profileSettings';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nconst myEvents = (participant:any) => {\n    const myArr = [];\n    const len = participant[0].length;\n    if(len == 0)\n    {\n        myArr.push(<><div className=\"notifications-list\">\n        <div className=\"notfication-details\">\n            No Event Participant\n        </div>\n    </div></>)\n    }\n    else\n    {\n\n        for (let i = 0; i < participant[0].length; i++) {\n            myArr.push(<><div className=\"notifications-list\">\n        <div className=\"notfication-details\">\n            <div className=\"noty-user-img\">\n                <img src={participant[0][i].event.imageUrl} alt=\"\" />\n            </div>\n            <div className=\"notification-info\">\n                <h3><a href=\"#\">{participant[0][i].event.title}</a></h3>\n                <span>{\"Start Date : \"+moment(+participant[0][i].event.startDate).format(\"D/MM/yyyy\")+ \" , End Date : \"+moment(+participant[0][i].event.endDate).format(\"D/MM/yyyy\")}</span>\n            </div>\n        </div>\n    </div></>)   \n    }\n    }\n    return myArr;\n}\nconst MyAllEvent = (props: any) => {\n    return <>\n        <ProfileProps type=\"event\">\n            <div className=\"acc-setting\">\n                <Form>\n                    <div className=\"acc-setting\">\n                        <h3>My Event</h3>\n                        {myEvents(props.participant)}\n                    </div>\n                </Form>\n            </div>\n        </ProfileProps>\n    </>\n}\n\nexport default MyAllEvent;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/Category/Events.tsx",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image, Button, Modal, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport TrandingEvents from '../home/Events/Events';\nimport Peoples from '../home/TopViewedPeople/Peoples';\nimport Categories from '../home/EventsCategories/Categories';\nimport { BiCalendarEvent } from 'react-icons/bi'\nimport { MdDateRange } from 'react-icons/md'\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport './Category.css';\n// import Img from '../../assets/images/resources/us-pic.png';\nconst Event = (props: any) => {\n    const [status, setStatus] = useState(\"\");\n    // const [eventParticipant,setEventParticipant] = useState(false);\n    const [show, setShow] = useState(false);\n    const [amt, setAmt] = useState({\n        amt: \"\",\n        event: \"\"\n    });\n    const [id, setId] = useState(0);\n    const handleClose = () => setShow(false);\n    const [hover, setHover] = useState(0);\n    const [errorParticipant, seterrorParticipant] = useState(\"\")\n    // const handleShow = () => setShow(true);\n    useEffect(() => {\n        console.log(props.errpart);\n        if (props.errpart) {\n            seterrorParticipant(props.errpart)\n        }\n        if (props.errpart == null) {\n            setShow(true);\n            seterrorParticipant(props.errpart)\n        }\n    }, [props.errpart])\n    const changeData = async (e: any) => {\n        setStatus(e.target.value);\n        await props.status(e.target.value)\n    }\n    const paymentHandler = async (id: any, event: string, amt: any) => {\n        const res = await props.check(id);\n        // console.log(res);\n        if ((props.errpart != \"\" && null) && res == undefined) {\n            console.log(props.errpart)\n            seterrorParticipant(props.errpart)\n        }\n        else if ((props.errpart == \"\" && null) && res == undefined) {\n            setShow(true);\n        }\n\n        setAmt({\n            amt: amt,\n            event: event\n        });\n        setId(id);\n    }\n    const hoverHandler = (id: any) => {\n        setHover(id);\n        seterrorParticipant(\"\");\n    }\n    const data = (category: any) => {\n        let catArr: any = [];\n        for (let i = 0; i < category[0].length; i++) {\n            const className = (hover == i) ? 'Active' : 'Actives';\n            catArr.push(\n                <>\n                    <ListGroup.Item key={category[0][i].categoryId} className={className} onClick={() => hoverHandler(i)} as={Link} to={`/u/event/${category[0][i].categoryId}`}>\n                        <BiCalendarEvent />\n                        {\"   \" + category[0][i].name}</ListGroup.Item>\n                    {/* <hr/> */}\n                </>\n                // <li key={i} style={{cursor:'pointer'}}  as={Link} to={`/u/event/${category[0][i].categoryId}`}>{category[0][i].name}</li>\n            )\n        }\n        return catArr;\n    }\n\n    const eventDisplay = (event: any) => {\n        let eventArr: any = [];\n        if (event[0].length == 0) {\n            eventArr.push(\n                <div className=\"post-bar\" key={\"i\"}>\n                    <div className=\"post_topbar\">\n                        <div className=\"usy-dt\">\n                            <div className=\"usy-name\">\n                                <h3>{\"No Event\"}</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>)\n            return eventArr\n        }\n        else {\n\n            for (let i = 0; i < event[0].length; i++) {\n                eventArr.push(\n                    <div key={\"00\" + event[0][i].eventId}>\n                        <div className=\"post-bar\" key={\"0\" + event[0][i].eventId}>\n                            <div className=\"post_topbar\">\n\n                                <div className=\"usy-dt\">\n                                    <img src={event[0][i].category.imagePath} style={{ width: \"40px\", objectFit: \"cover\" }} alt=\"\" />\n                                    <div className=\"usy-name\">\n                                        <h3>{event[0][i].title}</h3>\n                                        <span>{event[0][i].category.name}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"epi-sec\">\n                                <ul className=\"descp\" style={{ marginLeft: \"20px\" }}>\n                                    <li><span><MdDateRange /> StartDate : {moment(+event[0][i].startDate).format(\"D/MM/yyyy\")}</span></li>\n                                    <li><span><MdDateRange /> EndDate : {moment(+event[0][i].endDate).format(\"D/MM/yyyy\")}</span></li>\n                                    <li><span><MdDateRange /> LastRegistrationDate : {moment(+event[0][i].lastRegistraionDate).format(\"D/MM/yyyy\")}</span></li>\n                                </ul>\n                                <ul className=\"bk-links\">\n                                    <li><a href=\"#\"><i className=\"la la-bookmark\" /></a></li>\n                                    <li><a href=\"#\"><i className=\"la la-envelope\" /></a></li>\n                                    <li><a href=\"#\"><i className=\"la la-bookmark\" /></a></li>\n                                </ul>\n                            </div>\n\n                            <ul className=\"job-dt\">\n                                <li><a href=\"#\" title=\"\">Prize Money</a></li>\n                                <li><span>Rs. {event[0][i].priceAmount} /- </span></li>\n                            </ul>\n                            <Image src={event[0][i].imageUrl} style={{ width: '100%', height: '450px', boxShadow: \"2px 2px 5px\" }} />\n\n                            <div className=\"job_descp\" style={{ paddingTop: \"20px\" }}>\n                                <p>{event[0][i].description}</p>\n                            </div>\n                            {(moment(+event[0][i].startDate).isAfter(moment())) ?\n                                <div className=\"job-status-bar\">\n                                    <ul className=\"like-com\">\n                                        <li>Fees: {event[0][i].fees} </li>\n                                        {/* <li style={{ marginLeft: \"358px\" }}> */}\n                                        {/* </li> */}\n                                        <li><Button style={{ marginLeft: \"358px\" }} onClick={() => paymentHandler(event[0][i].eventId, event[0][i].title, event[0][i].fees)} variant={\"primary\"}>Participate Event</Button> </li>\n                                        {/* <li><a href=\"#\" className=\"com\"><i className=\"fas fa-comment-alt\" /> Participate Event</a></li> */}\n                                    </ul>\n                                </div> : \"\"}\n                            {(event[0][i].eventId == id) ?\n                                (errorParticipant != null || \"\") ?\n                                    (errorParticipant == \"Registration closed for event!\") ?\n                                        <span style={{ color: \"red\" }}> {errorParticipant} </span> :\n                                        <span style={{ color: \"green\" }}> {errorParticipant} </span>\n                                    : \"\" : \"\"}\n                        </div>\n                    </div>\n                )\n            }\n            return eventArr;\n        }\n    }\n    const paymentSuccess = async () => {\n        console.log(\"Called\");\n        setShow(false);\n        await props.amt(id);\n    }\n    const eventList = (event:any) => {\n        let eventArr: any = [];\n        for (let i = 0; i < event[0].length; i++) {\n            eventArr.push(<ListGroup.Item>{event[0][i].title}</ListGroup.Item>)\n        }\n        return eventArr;\n    }\n    return <>\n        <div className=\"main-section-data\">\n            <div className=\"row\">\n                <div className=\"col-lg-3 col-md-4 pd-left-none no-pd\">\n                    <div className=\"main-left-sidebar no-margin\">\n\n                        <div className=\"filter-secs\" style={{ padding: \"10px\", boxShadow: \"8px 7px 10px #888888\" }}>\n                            <div className=\"filter-heading\" style={{ marginBottom: \"0px\", backgroundColor: \"#e44d3a\", color: \"white\", textTransform: \"uppercase\" }}>\n                                <h3 style={{ color: \"white\" }}>Categories</h3>\n                            </div>\n                            <ul className=\"social_links\">\n                                <ListGroup variant=\"flush\">\n                                    {data(props.category)}\n                                </ListGroup>\n\n                            </ul>\n                        </div>\n                        <br></br>\n                        {/* <Categories /> */}\n                        <div className=\"tags-sec full-width\" style={{ marginTop: \"47px\" }}>\n                            <ul>\n                                <li><a href=\"#\">Help Center</a></li>\n                                <li><a href=\"#\">About</a></li>\n                                <li><a href=\"#\">Privacy Policy</a></li>\n                                <li><a href=\"#\">Community Guidelines</a></li>\n                                <li><a href=\"#\">Cookies Policy</a></li>\n                                <li><a href=\"#\">Career</a></li>\n                                <li><a href=\"#\">Language</a></li>\n                                <li><a href=\"#\">Copyright Policy</a></li>\n                            </ul>\n                            <div className=\"cp-sec\">\n                                <img src=\"images/logo2.png\" alt=\"\" />\n                                <p><img src=\"images/cp.png\" alt=\"\" />Copyright 2019</p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"col-lg-6\">\n                    <div className=\"form-group\" style={{ boxShadow: \"1px 1px 8px #888888\", float: \"left\", width: \"100%\", backgroundColor: \"#fff\", borderLeft: \"1px solid #e4e4e4\", borderRight: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\", marginBottom: \"20px\", padding: \"20px\" }}>\n                        <form>\n                            <select className=\"form-control\" name=\"status\" onChange={(e) => changeData(e)} id=\"exampleFormControlSelect1\" style={{ WebkitAppearance: \"menulist-button\" }}>\n                                <option value=\"All\">All Event</option>\n                                <option value=\"Ongoing\">LiveEvent</option>\n                                <option value=\"Upcoming\">UpcomingEvent</option>\n                                <option value=\"Ended\">PastEvent</option>\n                            </select>\n                        </form>\n                    </div>\n                    <div className=\"main-ws-sec\">\n                        <div className=\"posts-section\" style={{ boxShadow: \"1px 1px 1px\" }}>\n                            {eventDisplay(props.event)}\n                            {/* <div className=\"process-comm\">\n                                <div className=\"spinner\">\n                                    <div className=\"bounce1\" />\n                                    <div className=\"bounce2\" />\n                                    <div className=\"bounce3\" />\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-3 pd-right-none no-pd\">\n                    <div className=\"main-left-sidebar no-margin\">\n\n                        <div className=\"filter-secs\" style={{ padding: \"10px\", boxShadow: \"8px 7px 10px #888888\", marginBottom: \"25px\" }}>\n                            <div className=\"filter-heading\" style={{ marginBottom: \"0px\", backgroundColor: \"#e44d3a\", color: \"white\", textTransform: \"uppercase\" }}>\n                                <h3 style={{ color: \"white\" }}>Popular Events</h3>\n                            </div>\n                            <ul className=\"social_links\">\n                                <ListGroup variant=\"flush\">\n                                    <ul className=\"social_links\" style={{ cursor: \"pointer\" }}>\n                                        {eventList(props.event)}\n                                    </ul>\n                                </ListGroup>\n                            </ul>\n                        </div>\n                        {/* <Categories /> */}\n                        <div style={{ marginTop: \"50px\", boxShadow: \"8px 7px 10px #888888\" }}>\n                            <TrandingEvents />\n                            <Peoples />\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n        </div>\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Payment</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Table>\n                    <thead></thead>\n                    <tbody>\n                        <tr>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td>\n                                {\"You Can Participant  \"}\n                                <b>{amt.event}</b>\n                                <tr>\n                                    <td>\n\n                                    </td>\n                                    <td>\n                                        In Just Rs. {amt.amt} /-\n                            </td>\n\n                                </tr>\n                            </td>\n\n                        </tr>\n\n                    </tbody>\n                </Table>\n            </Modal.Body>\n            <Modal.Footer>\n                <PayPalButton\n                    amount={amt.amt}\n                    onSuccess={(details: any, data: any) => {\n                        alert(\"Transaction completed by \" + details.payer.name.given_name);\n                        paymentSuccess();\n                        // return props.amt(id);\n                        // OPTIONAL: Call your server to save the transaction\n                        // return fetch(\"/paypal-transaction-complete\", {\n                        //     method: \"post\",\n                        //     body: JSON.stringify({\n                        //     orderID: data.orderID\n                        //     })\n                        // });\n                    }\n                    }\n                />\n                <Button variant=\"secondary\" style={{ background: \"#e44d3a\" }} onClick={handleClose}>\n                    Close\n          </Button>\n            </Modal.Footer>\n        </Modal>\n    </>\n}\n\nexport default Event;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/Category/EventCategory.tsx",["269"],"import React,{useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Badge } from 'react-bootstrap';\n\n\nconst EventCategory = (props: any) => {\n    const [hover, setHover] = useState(0);\n    const data = (category:any) => {\n        \n        let catArr : any = [];\n        for(let i = 0;i<category[0].length;i++)\n        {\n            // const className = (hover == i) ? 'Active' : 'Actives';\n            const hoverHandler = (id: any) => {\n                setHover(id);\n            }\n            catArr.push(\n                <div className=\"col-lg-3 col-md-4 col-sm-6\" key={i}>                    \n                <div className=\"company_profile_info\" style={{boxShadow:\"1px 1px 12px\"}}>\n                    <div className=\"company-up-info\">\n                        <img src={category[0][i].imagePath} alt=\"\" />\n                        <h3>{category[0][i].name}</h3>\n                    </div>\n                    \n                    <Badge as={Link} className={'Active1'} onClick={() => hoverHandler(i)} to={`/u/event/${category[0][i].categoryId}`}>View Events</Badge>\n                    {/* <Button variant=\"primary\" size=\"lg\" as={Link} to={`/u/event/${category[0][i].categoryId}`}>View Events</Button> */}\n                    {/* <a href=\"company-profile.html\" title=\"\" className=\"view-more-pro\">View Events</a> */}\n                </div>\n                </div>\n                )\n        }\n        return catArr;\n    }\n    return <>\n        <section className=\"companies-info\">\n            <div className=\"container\" >\n                <div className=\"company-title\">\n                    <h3 style={{ marginBottom: \"0px\", backgroundColor: \"#e44d3a\", color: \"white\", textTransform: \"uppercase\" }}>All Category</h3>\n                </div>\n                <div className=\"companies-list\">\n                    <div className=\"row\">\n                        {data(props.category)}\n                    </div>\n                </div>\n                {/* <div className=\"process-comm\">\n                    <div className=\"spinner\">\n                        <div className=\"bounce1\"></div>\n                        <div className=\"bounce2\"></div>\n                        <div className=\"bounce3\"></div>\n                    </div>\n                </div> */}\n            </div>\n        </section>\n    </>\n}\n\nexport default EventCategory;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/ChangePassword.tsx",["270","271","272"],"import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ProfileProps from '../profile/profileSettings';\nconst ChangePassword = (props: any) => {\n    const [password, setPassword] = useState({\n        password: '',\n        oldPassword: '',\n        confirmPassword: ''\n    })\n    const [error, seterror] = useState({\n        password: '',\n        oldPassword: '',\n        confirmPassword: '',\n        IsValid: true\n    })\n    useEffect(() => {\n        if (props.errs) {\n            if (props.errs == 'Old Password is Not Match') {\n                seterror({\n                    ...error,\n                    oldPassword: \"Old Password is Not Match\",\n                    IsValid: false\n                })\n            }\n            if (props.errs == 'Password Must be 8') {\n                seterror({\n                    ...error,\n                    confirmPassword: \"Password Must be 8\",\n                    IsValid: false\n                })\n            }\n        }\n    }, [props.errs, error.IsValid])\n    const onDataChange = (e: any, name: string) => {\n\n        let oldData: any = { ...password }\n        oldData[name] = e.target.value;\n        setPassword(oldData);\n    }\n    const onFinish = async (values: any) => {\n        let passwords = { ...password }\n        let errors = { ...error, IsValid: false };\n        if (!passwords.oldPassword || passwords.oldPassword === \"\") {\n            errors.oldPassword = \"Old Password Is Required\"\n        } else {\n            errors.IsValid = true;\n            errors.oldPassword = \"\"\n        }\n        if (!password.password || passwords.password === \"\") {\n            errors.password = \"New Password Is Required\"\n        } else {\n            errors.IsValid = true;\n            errors.password = \"\"\n        }\n        if (!password.confirmPassword || passwords.confirmPassword === \"\") {\n            errors.confirmPassword = \"Confirm Password Is Required\"\n        }\n        else {\n            errors.IsValid = true;\n            errors.confirmPassword = \"\"\n        }\n        if (password.password.length > 0 && password.confirmPassword.length > 0) {\n            if (password.password !== password.confirmPassword) {\n                errors.IsValid = false;\n                errors.confirmPassword = \"New Password and Confirm Password Not Matched\"\n            }\n            else {\n                errors.IsValid = true;\n                errors.confirmPassword = \"\";\n            }\n        }\n        seterror(errors);\n        if (errors.IsValid) {\n            await props.changePassword(passwords.oldPassword, passwords.password);\n        }\n\n    };\n    return (<>\n        <ProfileProps type=\"changepassword\">\n\n            <div className=\"acc-setting\">\n                <h3>Change Password</h3>\n                <Form>\n                    {/* <div className=\"cp-field\">\n            <h5>Old Password</h5>\n            <div className=\"cpp-fiel\">\n                <input type=\"password\" name=\"oldPassword\" placeholder=\"Old Password\" onChange={(e) => onDataChange(e,'oldPassword')}/>\n            </div>\n            </div> */}\n                    <Form.Group className=\"cp-field\" controlId=\"formBasicPassword\">\n                        <Form.Label style={{ fontWeight: 600, marginBottom: \"10px\" }}>Old Password</Form.Label>\n                        <Form.Control isInvalid={(error.oldPassword) ? true : false} className=\"cpp-fiel\" type=\"password\" name=\"oldPassword\" onChange={(e) => onDataChange(e, 'oldPassword')} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {error.oldPassword}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group className=\"cp-field\" controlId=\"formBasicPassword\">\n                        <Form.Label style={{ fontWeight: 600, marginBottom: \"10px\" }}>New Password</Form.Label>\n                        <Form.Control isInvalid={(error.password) ? true : false} className=\"cpp-fiel\" type=\"password\" name=\"password\" onChange={(e) => onDataChange(e, 'password')} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {error.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group className=\"cp-field\" controlId=\"formBasicPassword\">\n                        <Form.Label style={{ fontWeight: 600, marginBottom: \"10px\" }}>Confirm Password</Form.Label>\n                        <Form.Control isInvalid={(error.confirmPassword) ? true : false} className=\"cpp-fiel\" type=\"password\" name=\"confirmPassword\" onChange={(e) => onDataChange(e, 'confirmPassword')} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {error.confirmPassword}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <div className=\"save-stngs pd2\">\n                        <ul>\n                            <li>\n                                <Button variant=\"primary\" onClick={onFinish}>\n                                    Submit\n                                </Button>\n                            </li>\n                        </ul>\n                    </div>\n                </Form>\n            </div>\n        </ProfileProps>\n\n    </>)\n}\n\n\nexport default ChangePassword;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Events/Events.tsx",["273"],"import React from \"react\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Image } from \"react-bootstrap\";\n\nimport commonClasses from \"../common.module.css\";\nimport classes from \"./Events.module.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { homePageEvents } from \"../../../utils/GqlQueries\";\nimport { event } from \"./../../../store/storeTypes\";\nenum EventStatusEnum {\n    Ongoing = \"Ongoing\",\n    Ended = \"Ended\",\n    Upcoming = \"Upcoming\",\n    All = \"All\",\n}\ninterface eventsResult {\n    events: [event];\n}\ninterface eventQueryVars {\n    status: EventStatusEnum;\n    categoryId?: string;\n    paid?: boolean;\n}\n\nconst renderEvents = (events: [event]) => {\n    return events.map((event) => (\n        <div className={classes.card} key={event.eventId}>\n            <Image\n                src={event.imageUrl}\n                rounded\n                className={classes.image}\n                fluid\n            />\n            <div className={classes.categoryTitle}>\n                <h2>{event.title}</h2>\n                <p>\n                    In <b>{event.category.name}</b>\n                </p>\n            </div>\n        </div>\n    ));\n};\nconst renderDummyEvents = (stripeClasses: string[]) => {\n    return Array(5)\n        .fill(0)\n        .map((_, index) => (\n            <div className={classes.card} key={index}>\n                <div className={classes.imageBox}>\n                    <div\n                        className={[\n                            commonClasses.stripe,\n                            commonClasses.stripeImage,\n                        ].join(\" \")}\n                    />\n                </div>\n                <div className={classes.categoryTitle}>\n                    <h2\n                        className={[\n                            ...stripeClasses,\n                            commonClasses.stripeMedium,\n                        ].join(\" \")}\n                    ></h2>\n                    <p\n                        className={[\n                            ...stripeClasses,\n                            commonClasses.stripeLong,\n                        ].join(\" \")}\n                    ></p>\n                </div>\n            </div>\n        ));\n};\n\nconst Events = () => {\n    const { loading, error, data } = useQuery<eventsResult, eventQueryVars>(\n        homePageEvents,\n        {\n            variables: {\n                status: EventStatusEnum.Ongoing,\n            },\n        }\n    );\n    let stripeClasses: string[] = [commonClasses.stripe, commonClasses.left];\n\n    return (\n        <div className={commonClasses.wrapper}>\n            <div className={commonClasses.heading}>\n                <FontAwesomeIcon icon={faCalendarAlt} size=\"1x\" />\n                <h3>Tranding Events</h3>\n            </div>\n            <div className={commonClasses.list}>\n                {loading\n                    ? renderDummyEvents(stripeClasses)\n                    : data?.events\n                    ? renderEvents(data?.events)\n                    : { error }}\n            </div>\n        </div>\n    );\n};\n\nexport default Events;\n","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/UserCard/UserCard.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/Posts.tsx",["274"],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/TopViewedPeople/Peoples.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/EventsCategories/Categories.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/UserRegister.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/Login.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/EditProfile.tsx",["275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"import React, { useState,useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Imgs from '../../assets/images/resources/cover-img.jpg';\nimport profileImg from '../../assets/images/resources/user-pro-img.png';\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Toast from 'react-bootstrap/Toast'\nconst EditProfile = (props: any) => {\n  const [show, setShow] = useState(false);\n\n\tconst [profile, setProfile] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t\tname: '',\n    email: '',\n    contact: '',\n    image:''\n  })\n\n  const [error,setError] = useState({\n    usernameError:'',\n    passwordError: '', \n    nameError: '', \n    emailError: '', \n    endDateError: '', \n    contactError: '', \n    imageError: '',\n    IsValid:true\n})\n  useEffect(()=>{\n    if(props.userProfile != undefined){\n      let old = {...profile};\n      old.username = props.userProfile.username;\n      old.password = props.userProfile.password;\n      old.name = props.userProfile.name;\n      old.email = props.userProfile.email;\n      old.contact = props.userProfile.contactNo;\n      old.image = props.userProfile.image;\n      setProfile(old);\n    }\n    if(props.errormsg)\n    {\n      if(props.errormsg === 'Username already exists'){\n        setError({\n          ...error,\n          usernameError:props.errormsg,\n          IsValid:false\n        })\n      }\n      if(props.errormsg === 'Email already exists'){\n        setError({\n          ...error,\n          emailError:props.errormsg,\n          IsValid:false\n        })\n      }\n      if(props.errormsg === 'ContactNo already exists'){\n        setError({\n          ...error,\n          contactError:props.errormsg,\n          IsValid:false\n        })\n      }\n    }\n  },[props.errormsg,props.userProfile,error.IsValid])\n\n\tconst onDataChange = (e: any, name: string) => {\n    let oldData: any = { ...profile }\n    // let errors = { ...error, IsValid : false };\n    if(name === 'image')\n    {\n      const imagePath = e.target.files[0];\n      // if(!imagePath.name.match(/\\.(jpg|jpeg|png)$/)) {\n      //   errors.imageError = \"image Should be jpg,jpeg or png\";\n      //   errors.IsValid = false;\n      // }\n      // else\n      // error.IsValid = true;\n      oldData[name] = imagePath;\n    }\n    else\n    {\n      oldData[name] = e.target.value;\n    }\n    // setError(errors);\n\t\tsetProfile(oldData);\n\t}\n\tconst onFinish = async (values: any) => {\n    let profileData = { ...profile }\n    let errors = { ...error, IsValid : false };\n    if(!profile.name || profile.name === \"\")\n    {\n      errors.nameError = \"Name Is Required \"\n    }\n    else{\n      errors.IsValid = true;\n      errors.nameError = \"\"\n    }\n    if(!profile.username || profile.username === \"\")\n    {\n      errors.usernameError = \"Username Is Required \"\n    }\n    else{\n      errors.IsValid = true;\n      errors.usernameError = \"\"\n    }\n    \n    if(!profile.contact || profile.contact === \"\")\n    {\n      errors.contactError = \"Mobile No Is Required \"\n    }\n    else\n    {\n      errors.IsValid = true;\n      errors.contactError = \"\";\n    }\n\n    setError(errors);\n    // console.log(profileData);    \n    if(errors.IsValid)\n    {\n      console.log('success');\n      await props.userEdit(profileData.name,profileData.email,profileData.password,profileData.username,profileData.contact,profileData.image)\n    }    \n\t};\n\treturn (\n        <>\n        <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded mr-2\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">Bootstrap</strong>\n            <small>11 mins ago</small>\n          </Toast.Header>\n          <Toast.Body>Woohoo, you're reading this text in a Toast!</Toast.Body>\n        </Toast>\n        <div className=\"wrapper\">\n          <section className=\"cover-sec\">\n            <img src={Imgs} alt=\"\" />\n            <div className=\"add-pic-box\">\n              <div className=\"container\">\n                <div className=\"row no-gutters\">\n                </div>\n              </div>\n            </div>\n          </section>\n          <main>\n            <div className=\"main-section\">\n              <div className=\"container\">\n                <div className=\"main-section-data\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-3\">\n                      <div className=\"main-left-sidebar\">\n                        <div className=\"user_profile\">\n                          <div className=\"user-pro-img\">\n                            {(profile.image)?<img src={profile.image} height=\"170px\" width=\"170px\" alt=\"\"/>:<img src={profileImg} alt=\"\"/>}\n                            {/* <img src={profile.image} alt=\"\" height=\"170px\" width=\"170px\"/> */}\n                            <div className=\"add-dp\" id=\"OpenImgUpload\">\n                              <input type=\"file\" id=\"file\" name=\"image\" onChange={(e) => onDataChange(e, 'image')} />\n                              <label htmlFor=\"file\">\n                                <FontAwesomeIcon icon={faCamera} size=\"2x\" style={{color: \"#e44d3a\"}}></FontAwesomeIcon>\n                              </label>\n                            </div>\n                          </div>\n                          <div className=\"user_pro_status\">\n                            <ul className=\"flw-status\">\n                              <li>\n                                <span>{profile.username}</span>\n                              </li>\n                              {/* <li>\n                                <span>Followers</span>\n                                <b>155</b>\n                              </li> */}\n                            </ul>\n                          </div>\n                          \n                          </div>\n                          <div className=\"tags-sec full-width\" style={{}}>\n                            <ul>\n                            <li><a href=\"#\" title=\"\">Help Center</a></li>\n                            <li><a href=\"#\" title=\"\">About</a></li>\n                            <li><a href=\"#\" title=\"\">Privacy Policy</a></li>\n                            <li><a href=\"#\" title=\"\">Community Guidelines</a></li>\n                            <li><a href=\"#\" title=\"\">Cookies Policy</a></li>\n                            <li><a href=\"#\" title=\"\">Career</a></li>\n                            <li><a href=\"#\" title=\"\">Language</a></li>\n                            <li><a href=\"#\" title=\"\">Copyright Policy</a></li>\n                            </ul>\n                            <div className=\"cp-sec\">\n                            <img src=\"images/logo2.png\" alt=\"\"/>\n                            <p><img src=\"images/cp.png\" alt=\"\"/>Copyright 2019</p>\n                            </div>\n                            </div>\n                      </div>\n                    </div>\n                    <div className=\"col-lg-8\">\n                    \n                    <div className=\"acc-setting\" style={{backgroundColor: \"#e2e2e2\",borderStyle: \"groove\",borderTopLeftRadius: \"107px\"}}>\n                    <h3 style={{marginLeft: \"254px\"}}>My Profile</h3>\n                    <Form>\n                    <Form.Group className=\"cp-field\" controlId=\"formBasicPassword\">\n                      <Form.Label style={{fontWeight: 600 , marginBottom: \"10px\"}}>Name</Form.Label>\n                      <Form.Control isInvalid={(error.nameError) ? true : false} className=\"cpp-fiel\" type=\"text\" name=\"name\" placeholder=\"Name\" value={profile.name || ''} onChange={(e) => onDataChange(e, 'name')} />\n                      <Form.Control.Feedback type=\"invalid\">\n                          {error.nameError}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group className=\"cp-field\" controlId=\"formBasicPassword\">\n                      <Form.Label style={{fontWeight: 600 , marginBottom: \"10px\"}}>Username</Form.Label>\n                      <Form.Control isInvalid={(error.usernameError) ? true : false} className=\"cpp-fiel\" name=\"username\" placeholder=\"User Name\" value={profile.username} onChange={(e) => onDataChange(e, 'username')}/>\n                      {/* <i className=\"fa fa-envelope\"></i> */}\n                      \n                      <Form.Control.Feedback type=\"invalid\">\n                            {error.usernameError}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"cp-field\" controlId=\"formBasicPassword\">\n                      <Form.Label style={{fontWeight: 600 , marginBottom: \"10px\"}}>Email</Form.Label>\n                      <Form.Control isInvalid={(error.emailError) ? true : false} className=\"cpp-fiel\" name=\"email\" placeholder=\"Email\" value={profile.email || ''} onChange={(e) => onDataChange(e, 'email')} readOnly/>\n                      {/* <i className=\"fa fa-envelope\"></i> */}\n                      <Form.Control.Feedback type=\"invalid\">\n                            {error.emailError}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"cp-field\" controlId=\"formBasicPassword\">\n                      <Form.Label style={{fontWeight: 600 , marginBottom: \"10px\"}}>Mobile No</Form.Label>\n                      <Form.Control isInvalid={(error.contactError) ? true : false} className=\"cpp-fiel\" name=\"contact\" placeholder=\"Mobile No\" value={profile.contact || ''} onChange={(e) => onDataChange(e, 'contact')}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                            {error.contactError}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    {/* <Form.Group className=\"cp-field\" controlId=\"formBasicPassword\">\n                      <Form.Label style={{fontWeight: 600 , marginBottom: \"10px\"}}>Password</Form.Label>\n                      <Form.Control className=\"cpp-fiel\" type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(e) => onDataChange(e, 'password')}/>\n                      <i className=\"fa fa-envelope\"></i>\n                    </Form.Group> */}\n                    <Button variant=\"primary\" onClick={onFinish} style={{ marginLeft: \"20px\", marginBottom: \"20px\"}}>\n                      Submit\n                    </Button>\n                    </Form>\n                    </div>\n\n                    </div>\n                    {/* <div className=\"col-lg-3\">\n\n                    </div> */}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n          <footer>\n            <div className=\"footy-sec mn no-margin\">\n              <div className=\"container\">\n                <ul>\n                  <li><a href=\"help-center.html\">Help Center</a></li>\n                  <li><a href=\"about.html\">About</a></li>\n                  <li><a href=\"#\">Privacy Policy</a></li>\n                  <li><a href=\"#\">Community Guidelines</a></li>\n                  <li><a href=\"#\">Cookies Policy</a></li>\n                  <li><a href=\"#\">Career</a></li>\n                  <li><a href=\"forum.html\">Forum</a></li>\n                  <li><a href=\"#\">Language</a></li>\n                  <li><a href=\"#\">Copyright Policy</a></li>\n                </ul>\n                <p><img src=\"images/copy-icon2.png\" alt=\"\" />Copyright 2019</p>\n                <img className=\"fl-rgt\" src=\"images/logo2.png\" alt=\"\" />\n              </div>\n            </div>\n          </footer>\n        </div>\n\t\t</>\n\t)\n}\n\nexport default EditProfile;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/profile/profileSettings.tsx",["291","292"],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../containers/Auth';\n// import * as classes from'./profile.module.css';\ninterface ProfileProps {\n    children: any\n    type: string\n}\n\nconst ProfileSetting = (props: ProfileProps) => {\n\n    return <>\n        <div className=\"account-tabs-setting\">\n            <div className=\"row\">\n                <div className=\"col-lg-3\">\n                    <div className=\"acc-leftbar\">\n                        <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                            {/* <div className=\"nav-item nav-link\" id=\"nav-acc-tab\" style={{backgroundColor: 'inherit',color: \"#e44d3a\",borderColor: 'inherit'}}>Change Password</div> */}\n                            {/* <a className={props.type === \"changepassword\" ? \"nav-item nav-link Active\" : \"\"} id=\"nav-acc-tab\" ><i className=\"la la-cogs\" /> */}\n                                <Link to={\"/u/changepassword\"} className={props.type === \"changepassword\" ? \"nav-item nav-link Active\" : \"Actives\"} id=\"nav-acc-tab\"  style={{color: \"black\"}}><i className=\"la la-cogs\" />Change Password</Link>\n                            {/* <a className={props.type === \"event\" ? \"nav-item nav-link Active\" : \"\"} id=\"nav-acc-tab\"><i className=\"fa fa-line-chart\" /> */}\n                                <Link to={\"/u/myevent\"} className={props.type === \"event\" ? \"nav-item nav-link Active\" : \"Actives\"} style={{color: \"black\"}}><i className=\"la la-cogs\" />My Events</Link>\n                                {/* </a> */}\n                            {/* <a className={props.type === \"myphotos\" ? \"nav-item nav-link Active\" : \"\"} id=\"nav-acc-tab\"><i className=\"fa fa-line-chart\" /> */}\n                                <Link to={\"/u/myphoto\"} className={props.type === \"myphotos\" ? \"nav-item nav-link Active\" : \"Actives\"} style={{color: \"black\"}}><i className=\"la la-cogs\" />My Photo</Link>\n                                {/* </a> */}\n                            {/* {(props.type === \"logout\")}     */}\n                            {/* <a className={props.type === \"contact\" ? \"nav-item nav-link Active\" : \"\"} id=\"nav-acc-tab\"><i className=\"fa fa-line-chart\" /> */}\n                            {/* <a className={props.type === \"about\" ? \"nav-item nav-link Active\" : \"\"} id=\"nav-acc-tab\"><i className=\"fa fa-line-chart\" /> */}\n                                <Link to={\"/u/about\"} className={props.type === \"about\" ? \"nav-item nav-link Active\" : \"Actives\"} style={{color: \"black\"}}><i className=\"la la-cogs\" />About Us</Link>\n                                {/* </a> */}\n                            {/* <a className={props.type === \"contact\" ? \"nav-item nav-link Active\" : \"\"} id=\"nav-acc-tab\"><i className=\"fa fa-line-chart\" /> */}\n                                <Link to={\"/u/contact\"} className={props.type === \"contact\" ? \"nav-item nav-link Active\" : \"Actives\"} style={{color: \"black\"}}><i className=\"la la-cogs\" />Contact Us</Link>\n                                {/* </a> */}\n                            {/* <a className={props.type === \"logout\"?\"nav-item nav-link\":\"\"} style={{color: \"black\"}}><i className=\"fa fa-line-chart\" />  */}\n                            <Link to={\"/logout\"} className={props.type === \"logout\" ? \"nav-item nav-link Active\" : \"Actives\"} style={{color: \"black\"}}><i className=\"la la-cogs\" />Logout</Link>\n                            {/* </a> */}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-9\">\n                    <div className=\"tab-content\" id=\"nav-tabContent\">\n                        {props.children}\n                        {/* <div className=\"tab-pane fade active show\" id=\"nav-acc\" role=\"tabpanel\" aria-labelledby=\"nav-acc-tab\">\n                            <div className=\"acc-setting\">\n                                <h3>My Profile</h3>\n                                \n                            </div>\n                        </div>\n                        <div className=\"tab-pane fade\" id=\"nav-status\" role=\"tabpanel\" aria-labelledby=\"nav-status-tab\">\n                            <div className=\"acc-setting\">\n                                <h3>Change Password</h3>\n\n                            </div>\n                        </div> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default ProfileSetting;","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostView.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/Post/Post.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/auth/AuthCommon.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostSidebar/Sidebar.tsx",["293"],"import { useEffect } from \"react\";\nimport PostViewHeader from \"./PostViewHeader\";\nimport PostViewContent from \"./PostViewContent\";\nimport PostViewFooter from \"./PostViewFooter\";\nimport { comment, postt } from \"../../../../../store/storeTypes\";\nimport { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { doComment, fetchPhotoComments } from \"../../../../../utils/GqlQueries\";\n\ninterface SidebarProps {\n    post: postt;\n}\ninterface fetchCommentsResult {\n    comments: [comment];\n}\ninterface writeCommentResult {\n    addComment: comment;\n}\n\nconst Sidebar = (props: SidebarProps) => {\n    const { post } = props;\n    const {\n        refetch: refetchComments,\n        loading: commentLoading,\n        data: commentData,\n        error: commentError,\n    } = useQuery<fetchCommentsResult>(fetchPhotoComments, {\n        variables: {\n            photoId: post.photoId,\n        },\n    });\n    const [\n        comment,\n        {\n            data: writeCommentData,\n            error: writeCommentErr,\n            loading: writeCommentLoading,\n        },\n    ] = useMutation<writeCommentResult>(doComment);\n\n    const [like, setLike] = useState({\n        likes: 0,\n        isLiked: false,\n    });\n    const [comments, setComments] = useState<[comment]>();\n\n    useEffect(() => {\n        setLike({\n            likes: post.likes,\n            isLiked: post.isLiked,\n        });\n        if (!commentError && !commentLoading) {\n            setComments(commentData?.comments);\n        }\n    }, [\n        post.likes,\n        post.isLiked,\n        setLike,\n        commentLoading,\n        commentData,\n        commentError,\n    ]);\n\n    const writeComment = async (text: string) => {\n        await comment({\n            variables: {\n                photoId: post.photoId,\n                text,\n            },\n        });\n        if (writeCommentData && comments) {\n            let newComments = [...comments, writeCommentData.addComment];\n            setComments(newComments as [comment]);\n        }\n        refetchComments();\n    };\n\n    return (\n        <>\n            <PostViewHeader\n                name={post.user.name}\n                comments={comments ? comments.length : 0}\n                userImageUrl={post.user.image}\n                key={post.photoId}\n                createdAt={+post.createdAt}\n            />\n            <PostViewContent comments={comments} loading={commentLoading} />\n            <PostViewFooter\n                submitComment={writeComment}\n                loading={writeCommentLoading}\n                error={writeCommentErr?.message}\n            />\n        </>\n    );\n};\n\nexport default Sidebar;\n","/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostImage/PostImage.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostSidebar/PostViewFooter.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostSidebar/PostViewContent.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/Posts/PostView/PostSidebar/PostViewHeader.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/HomeEventTop/HomeEventTop.tsx",[],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/home/HomeEventTop/ParticipateModel/ParticipateModel.tsx",["294","295","296"],"/media/bhavik/DATA/projects/sem9-prasang/prasang/src/components/common/Loader/Loader.tsx",[],{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","severity":1,"message":"302","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"305","line":58,"column":11,"nodeType":"303","messageId":"304","endLine":58,"endColumn":16},{"ruleId":"301","severity":1,"message":"306","line":3,"column":24,"nodeType":"303","messageId":"304","endLine":3,"endColumn":35},{"ruleId":"301","severity":1,"message":"307","line":16,"column":12,"nodeType":"303","messageId":"304","endLine":16,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":28,"column":7,"nodeType":"310","endLine":28,"endColumn":13,"suggestions":"311"},{"ruleId":"301","severity":1,"message":"312","line":14,"column":19,"nodeType":"303","messageId":"304","endLine":14,"endColumn":26},{"ruleId":"301","severity":1,"message":"307","line":20,"column":12,"nodeType":"303","messageId":"304","endLine":20,"endColumn":25},{"ruleId":"308","severity":1,"message":"313","line":55,"column":7,"nodeType":"310","endLine":55,"endColumn":20,"suggestions":"314"},{"ruleId":"301","severity":1,"message":"302","line":1,"column":15,"nodeType":"303","messageId":"304","endLine":1,"endColumn":23},{"ruleId":"308","severity":1,"message":"315","line":26,"column":7,"nodeType":"310","endLine":26,"endColumn":13,"suggestions":"316"},{"ruleId":"301","severity":1,"message":"302","line":1,"column":15,"nodeType":"303","messageId":"304","endLine":1,"endColumn":23},{"ruleId":"308","severity":1,"message":"317","line":26,"column":7,"nodeType":"310","endLine":26,"endColumn":13,"suggestions":"318"},{"ruleId":"319","severity":1,"message":"320","line":62,"column":20,"nodeType":"321","messageId":"322","endLine":62,"endColumn":22},{"ruleId":"301","severity":1,"message":"323","line":3,"column":47,"nodeType":"303","messageId":"304","endLine":3,"endColumn":56},{"ruleId":"301","severity":1,"message":"324","line":9,"column":8,"nodeType":"303","messageId":"304","endLine":9,"endColumn":12},{"ruleId":"319","severity":1,"message":"320","line":12,"column":28,"nodeType":"321","messageId":"322","endLine":12,"endColumn":30},{"ruleId":"301","severity":1,"message":"302","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"325","line":1,"column":27,"nodeType":"303","messageId":"304","endLine":1,"endColumn":36},{"ruleId":"319","severity":1,"message":"320","line":8,"column":12,"nodeType":"321","messageId":"322","endLine":8,"endColumn":14},{"ruleId":"326","severity":1,"message":"327","line":26,"column":21,"nodeType":"328","endLine":26,"endColumn":33},{"ruleId":"301","severity":1,"message":"329","line":8,"column":8,"nodeType":"303","messageId":"304","endLine":8,"endColumn":18},{"ruleId":"301","severity":1,"message":"330","line":15,"column":12,"nodeType":"303","messageId":"304","endLine":15,"endColumn":18},{"ruleId":"319","severity":1,"message":"331","line":44,"column":28,"nodeType":"321","messageId":"322","endLine":44,"endColumn":30},{"ruleId":"319","severity":1,"message":"320","line":44,"column":50,"nodeType":"321","messageId":"322","endLine":44,"endColumn":52},{"ruleId":"319","severity":1,"message":"320","line":48,"column":33,"nodeType":"321","messageId":"322","endLine":48,"endColumn":35},{"ruleId":"319","severity":1,"message":"320","line":48,"column":55,"nodeType":"321","messageId":"322","endLine":48,"endColumn":57},{"ruleId":"319","severity":1,"message":"320","line":65,"column":38,"nodeType":"321","messageId":"322","endLine":65,"endColumn":40},{"ruleId":"319","severity":1,"message":"320","line":81,"column":29,"nodeType":"321","messageId":"322","endLine":81,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":117,"column":41,"nodeType":"328","endLine":117,"endColumn":53},{"ruleId":"326","severity":1,"message":"327","line":118,"column":41,"nodeType":"328","endLine":118,"endColumn":53},{"ruleId":"326","severity":1,"message":"327","line":119,"column":41,"nodeType":"328","endLine":119,"endColumn":53},{"ruleId":"326","severity":1,"message":"327","line":124,"column":37,"nodeType":"328","endLine":124,"endColumn":58},{"ruleId":"319","severity":1,"message":"320","line":142,"column":51,"nodeType":"321","messageId":"322","endLine":142,"endColumn":53},{"ruleId":"319","severity":1,"message":"320","line":144,"column":55,"nodeType":"321","messageId":"322","endLine":144,"endColumn":57},{"ruleId":"326","severity":1,"message":"327","line":188,"column":37,"nodeType":"328","endLine":188,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":189,"column":37,"nodeType":"328","endLine":189,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":190,"column":37,"nodeType":"328","endLine":190,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":191,"column":37,"nodeType":"328","endLine":191,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":192,"column":37,"nodeType":"328","endLine":192,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":193,"column":37,"nodeType":"328","endLine":193,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":194,"column":37,"nodeType":"328","endLine":194,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":195,"column":37,"nodeType":"328","endLine":195,"endColumn":49},{"ruleId":"301","severity":1,"message":"332","line":8,"column":12,"nodeType":"303","messageId":"304","endLine":8,"endColumn":17},{"ruleId":"319","severity":1,"message":"320","line":19,"column":28,"nodeType":"321","messageId":"322","endLine":19,"endColumn":30},{"ruleId":"319","severity":1,"message":"320","line":26,"column":28,"nodeType":"321","messageId":"322","endLine":26,"endColumn":30},{"ruleId":"308","severity":1,"message":"333","line":34,"column":8,"nodeType":"310","endLine":34,"endColumn":35,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":58,"column":21,"nodeType":"328","endLine":63,"endColumn":22},{"ruleId":"308","severity":1,"message":"337","line":63,"column":8,"nodeType":"310","endLine":63,"endColumn":10,"suggestions":"338"},{"ruleId":"319","severity":1,"message":"331","line":32,"column":26,"nodeType":"321","messageId":"322","endLine":32,"endColumn":28},{"ruleId":"308","severity":1,"message":"339","line":66,"column":5,"nodeType":"310","endLine":66,"endColumn":53,"suggestions":"340"},{"ruleId":"326","severity":1,"message":"327","line":184,"column":33,"nodeType":"328","endLine":184,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":185,"column":33,"nodeType":"328","endLine":185,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":186,"column":33,"nodeType":"328","endLine":186,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":187,"column":33,"nodeType":"328","endLine":187,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":188,"column":33,"nodeType":"328","endLine":188,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":189,"column":33,"nodeType":"328","endLine":189,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":190,"column":33,"nodeType":"328","endLine":190,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":191,"column":33,"nodeType":"328","endLine":191,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":265,"column":23,"nodeType":"328","endLine":265,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":266,"column":23,"nodeType":"328","endLine":266,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":267,"column":23,"nodeType":"328","endLine":267,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":268,"column":23,"nodeType":"328","endLine":268,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":270,"column":23,"nodeType":"328","endLine":270,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":271,"column":23,"nodeType":"328","endLine":271,"endColumn":35},{"ruleId":"301","severity":1,"message":"341","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":16},{"ruleId":"301","severity":1,"message":"342","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":12},{"ruleId":"301","severity":1,"message":"343","line":41,"column":12,"nodeType":"303","messageId":"304","endLine":41,"endColumn":16},{"ruleId":"301","severity":1,"message":"344","line":25,"column":16,"nodeType":"303","messageId":"304","endLine":25,"endColumn":32},{"ruleId":"301","severity":1,"message":"345","line":39,"column":35,"nodeType":"303","messageId":"304","endLine":39,"endColumn":45},{"ruleId":"308","severity":1,"message":"346","line":47,"column":8,"nodeType":"310","endLine":47,"endColumn":45,"suggestions":"347"},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'useSelector' is defined but never used.","'categoryError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'catActions', 'dispatch', and 'refetch'. Either include them or remove the dependency array.","ArrayExpression",["350"],"'refetch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'catActions', 'dispatch', and 'eventActions'. Either include them or remove the dependency array.",["351"],"React Hook useEffect has missing dependencies: 'dispatch', 'participantActions', and 'refetch'. Either include them or remove the dependency array.",["352"],"React Hook useEffect has missing dependencies: 'dispatch', 'photoActions', and 'refetch'. Either include them or remove the dependency array.",["353"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'faUserCog' is defined but never used.","'drop' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Categories' is defined but never used.","'status' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'hover' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array. You can also do a functional update 'seterror(e => ...)' if you only need 'error' in the 'seterror' call.",["354"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useCallback has missing dependencies: 'data', 'error', 'loading', and 'posts'. Either include them or remove the dependency array.",["355"],"React Hook useEffect has missing dependencies: 'error' and 'profile'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["356"],"'Button' is defined but never used.","'Auth' is defined but never used.","'like' is assigned a value but never used.","'participantError' is assigned a value but never used.","'photoError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'error' and 'loading'. Either include them or remove the dependency array.",["357"],"no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},"Update the dependencies array to be: [catActions, data, dispatch, refetch]",{"range":"374","text":"375"},"Update the dependencies array to be: [catActions, data, dispatch, eventActions, events]",{"range":"376","text":"377"},"Update the dependencies array to be: [data, dispatch, participantActions, refetch]",{"range":"378","text":"379"},"Update the dependencies array to be: [data, dispatch, photoActions, refetch]",{"range":"380","text":"381"},"Update the dependencies array to be: [props.errs, error.IsValid, error]",{"range":"382","text":"383"},"Update the dependencies array to be: [data, error, loading, posts]",{"range":"384","text":"385"},"Update the dependencies array to be: [props.errormsg, props.userProfile, error.IsValid, profile, error]",{"range":"386","text":"387"},"Update the dependencies array to be: [data, error, loading, setEventId, setParticipations]",{"range":"388","text":"389"},[976,982],"[catActions, data, dispatch, refetch]",[2081,2094],"[catActions, data, dispatch, eventActions, events]",[946,952],"[data, dispatch, participantActions, refetch]",[854,860],"[data, dispatch, photoActions, refetch]",[1060,1087],"[props.errs, error.IsValid, error]",[1901,1903],"[data, error, loading, posts]",[1832,1880],"[props.errormsg, props.userProfile, error.IsValid, profile, error]",[1599,1636],"[data, error, loading, setEventId, setParticipations]"]